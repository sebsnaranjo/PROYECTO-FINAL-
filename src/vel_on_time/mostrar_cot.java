/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vel_on_time;

import com.itextpdf.text.DocumentException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jose noel mantilla
 */
public class mostrar_cot extends javax.swing.JFrame {

private int randomico2;
private int prec2;
private String nombre2;
private int presupuesto2;
private int numIn2;
private String fecha2;
 private  int nmuI;
 private       int valorTglobIn;
 private       String fid = null;
 private       String fnombre;
 private       String fni;
 private       String ffecha;
 private       String fvalorgastro;
 private       String fvalordeco;
 private       String fvalorserv;
 private       String fvalorlug;
 private       String fvalortglob;
 private       String fartgast;
  private       String fartgast2;
 private       String fartdeco;
  private      String fartserv;
  private      String fartlug;
  private      String fpresu;
  private String tip_event5;
    /**
     * Creates new form mostrar_cot
     */
    public mostrar_cot() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cajita_grande = new javax.swing.JTextArea();
        volver = new javax.swing.JButton();
        imprimir_contrato = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cajita_grande.setColumns(20);
        cajita_grande.setRows(5);
        jScrollPane1.setViewportView(cajita_grande);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 67, 510, 490));

        volver.setText("VOLVER");
        volver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverMouseClicked(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 570, -1, 30));

        imprimir_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printer_print_22133.png"))); // NOI18N
        imprimir_contrato.setText("IMPRIMIR CONTRATO");
        imprimir_contrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprimir_contratoMouseClicked(evt);
            }
        });
        getContentPane().add(imprimir_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 570, -1, 30));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cotizaci√≥n a ver");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/marble-2398946_960_720.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseClicked
        todas_cot ob33 = new todas_cot();
        ob33.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_volverMouseClicked

    private void imprimir_contratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimir_contratoMouseClicked

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        archivoos ob37= new archivoos();
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido
      String fnombrek;
   String fnik;
      String ffechak;
        String fvalorgastrok;
    String fvalordecok;
    String fvalorservk;
    String fvalorlugk;
    String fvalortglobk;
    String fartgastk;
    String fartgast2k;
    String fartdecok;
    String fartservk;
    String fartlugk;
    String fpresuk;
    int valorTglobInk;
    int nmuIk;
    String fidk;
    
            
        
        try {
            archivoos ob49=new archivoos();
            
            archivo2 = new File("src\\archivos\\Cotizaciones Realizadas.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            //System.out.println("Entrooo");
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea2.readLine()) != null) { //recorre todo el archivo
            // System.out.println("Entrooo");
                 String nmuk[]= cadena.split(";");
                 nmuIk= Integer.parseInt(nmuk[1]);
                 String idk[]= cadena.split(";");
                 fidk= idk[2];
                 String nombrek[]= cadena.split(";");
                 fnombrek=nombrek[3];
                 String nIk[]= cadena.split(";");
                 fnik= nIk[4];
                 String fechak[]= cadena.split(";");
                 ffechak=fechak[5];
                 String valorGastrok[]= cadena.split(";");
                 fvalorgastrok=valorGastrok[6];
                 String valortdaceok[]= cadena.split(";");
                 fvalordecok=valortdaceok[7];
                 String valortservk[]= cadena.split(";");
                 fvalorservk= valortservk[8];
                 String valortlugk[]= cadena.split(";");
                 fvalorlugk= valortlugk[9];
                 String valorTglobk[]= cadena.split(";");
                 valorTglobInk= Integer.parseInt(valorTglobk[10]);
                 fvalortglobk=valorTglobk[10];
                 String artGastk[]= cadena.split(";");
                 fartgastk= artGastk[11];
                 String artDecok[]= cadena.split(";");
                 fartdecok= artDecok[12];
                 String artServk[]= cadena.split(";");
                 fartservk= artServk[13];
                 String artLugk[]= cadena.split(";");
                 fartlugk= artLugk[14];
                 String presu2k[]= cadena.split(";");
                 fpresuk=presu2k[15];
            
                     
                 if (randomico2==nmuIk && prec2==valorTglobInk){
                    
   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                  
                int tot_gask=0;
                  String prec_gastrok[]=fartgastk.split(",");
                 
                  
                for(int i=0;i<fartgastk.length();i++){
                    if(fartgastk.charAt(i)==','){
                     tot_gask+=1;   
                    }
                }
                for(int i=0;i<tot_gask;i=i+2){
                    String arch;
                    arch=ob49.buscprovcom(prec_gastrok[i]);
                    ob49.llenarfinal(arch, ffechak);
                    
                }
                   
                     
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////                   
                               
                int tot_decok=0;
                  String prec_decok[]=fartdecok.split(",");
                 
                for(int i=0;i<fartdecok.length();i++){
                    if(fartdecok.charAt(i)==','){
                     tot_decok+=1;   
                    }
                }
                for(int i=0;i<tot_decok;i=i+2){
                  
                    String arch;
                    arch=ob49.buscprovdeco(prec_decok[i]);
                    ob49.llenarfinal(arch, ffechak);
                    
                }
          
   //////////////////////////////////////////////////////////////////////////////////////////////////////////////                 
                int tot_servk=0;
                  String prec_servk[]=fartservk.split(",");
                 
                  
                for(int i=0;i<fartservk.length();i++){
                    if(fartservk.charAt(i)==','){
                     tot_servk+=1;   
                    }
                }
                for(int i=0;i<tot_servk;i=i+2){
                   
                    String arch;
                    arch=ob49.buscprovserv(prec_servk[i]);
                    ob49.llenarfinal(arch, ffechak);              

                }                 
    ///////////////////////////////////////////////////////////////////////////////////////////                 
                int tot_lugk=0;
                  String prec_lugk[]=fartlugk.split(",");
                  
                  
                for(int i=0;i<fartlugk.length();i++){
                    if(fartlugk.charAt(i)==','){
                     tot_lugk+=1;   
                    }
                }
                for(int i=0;i<tot_lugk;i=i+2){
                 
                    String arch;
                     arch=ob49.buscprovlug(prec_lugk[i]);
                    ob49.llenarfinal(arch, ffechak);   
                    
                 
                }
                     
                     
                     
           ////////////////////////////////////////////////////////////////////////////////////////////////////////////          
                    
                 }
 
            }  

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido
     
            
        
        try {
            archivo = new File("src\\archivos\\Cotizaciones Realizadas.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
             
                 String nmu[]= cadena.split(";");
                 nmuI= Integer.parseInt(nmu[1]);
                 String id[]= cadena.split(";");
                 fid= id[2];
                 String nombre[]= cadena.split(";");
                 fnombre=nombre[3];
                 String nI[]= cadena.split(";");
                 fni= nI[4];
                 String fecha[]= cadena.split(";");
                 ffecha=fecha[5];
                 String valorGastro[]= cadena.split(";");
                 fvalorgastro=valorGastro[6];
                 String valortdaceo[]= cadena.split(";");
                 fvalordeco=valortdaceo[7];
                 String valortserv[]= cadena.split(";");
                 fvalorserv= valortserv[8];
                 String valortlug[]= cadena.split(";");
                 fvalorlug= valortlug[9];
                 String valorTglob[]= cadena.split(";");
                 valorTglobIn= Integer.parseInt(valorTglob[10]);
                 fvalortglob=valorTglob[10];
                 String artGast[]= cadena.split(";");
                 fartgast= artGast[11];
                 String artDeco[]= cadena.split(";");
                 fartdeco= artDeco[12];
                 String artServ[]= cadena.split(";");
                 fartserv= artServ[13];
                 String artLug[]= cadena.split(";");
                 fartlug= artLug[14];
                 String presu2[]= cadena.split(";");
                 fpresu=presu2[15];
                String tip_event[]= cadena.split(";");
                 tip_event5=tip_event[16];
                 this.tip_event5=tip_event5;
                     
                 if (randomico2==nmuI && prec2==valorTglobIn){
                    
   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                  
                int tot_gas=0;
                  String prec_gastro[]=fartgast.split(",");
                  int final_tot_gas=0;
                  
                for(int i=0;i<fartgast.length();i++){
                    if(fartgast.charAt(i)==','){
                     tot_gas+=1;   
                    }
                }
                for(int i=1;i<tot_gas;i=i+2){
                    int x=Integer.parseInt(prec_gastro[i]);
                    
                    final_tot_gas=final_tot_gas+x;
                }
                     
                    
                     
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////                   
                               
                int tot_deco=0;
                  String prec_deco[]=fartdeco.split(",");
                  int final_tot_deco=0;
                  
                for(int i=0;i<fartdeco.length();i++){
                    if(fartdeco.charAt(i)==','){
                     tot_deco+=1;   
                    }
                }
                for(int i=1;i<tot_deco;i=i+2){
                    int x=Integer.parseInt(prec_deco[i]);
                    
                    final_tot_deco=final_tot_deco+x;
                }
                     
                    
                     
                     
   //////////////////////////////////////////////////////////////////////////////////////////////////////////////                 
                     
                     
                               
                int tot_serv=0;
                  String prec_serv[]=fartserv.split(",");
                  int final_tot_serv=0;
                  
                for(int i=0;i<fartserv.length();i++){
                    if(fartserv.charAt(i)==','){
                     tot_serv+=1;   
                    }
                }
                for(int i=1;i<tot_serv;i=i+2){
                    int x=Integer.parseInt(prec_serv[i]);
                    
                    final_tot_serv=final_tot_serv+x;
                }
                     
                    
                     
                     
                     
                     
    ///////////////////////////////////////////////////////////////////////////////////////////                 
                     
                               
                int tot_lug=0;
                  String prec_lug[]=fartlug.split(",");
                  int final_tot_lug=0;
                  
                for(int i=0;i<fartlug.length();i++){
                    if(fartlug.charAt(i)==','){
                     tot_lug+=1;   
                    }
                }
                for(int i=1;i<tot_lug;i=i+2){
                    int x=Integer.parseInt(prec_lug[i]);
                    
                    final_tot_lug=final_tot_lug+x;
                }
                     
                     
                     
                     
                     
           ////////////////////////////////////////////////////////////////////////////////////////////////////////////          
                     ob37.cot_totales2(fid,fnombre,fpresu,fni,ffecha,fvalortglob,fvalorgastro,fvalordeco,fvalorserv,fvalorlug,final_tot_gas,final_tot_deco,final_tot_serv,final_tot_lug);
                     
                     
                     ob37.generarPDF(fid,fnombre,fpresu,fni,ffecha,fvalortglob,fvalorgastro,fvalordeco,fvalorserv,fvalorlug,fartgast,fartdeco,fartserv,fartlug,tip_event5);
                 }
 
            }  
        
          
      

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } catch (DocumentException ex) {
        Logger.getLogger(mostrar_cot.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }//GEN-LAST:event_imprimir_contratoMouseClicked

   
    /**
     * @param args the command line arguments
     */
          void mostrar2(int randomico, int precio,String nombre,int presupuesto,int numIn, String fecha){
       randomico2=randomico;
       prec2=precio;
       nombre2=nombre;
       presupuesto2=presupuesto;
       numIn2=numIn;
       fecha2=fecha;
       this.randomico2=randomico2;
       this.prec2= prec2;
       this.nombre2=nombre2;
       this.presupuesto2=presupuesto2;
       this.numIn2=numIn2;
       this.fecha2=fecha2;
       mostrar();
      
      }
    void mostrar(){
    
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido
        String a;
        int nmuI;
        int valorTglobIn;
        String fid = null;
        String fnombre;
        String fni;
        String ffecha;
        String fvalorgastro;
        String fvalordeco;
        String fvalorserv;
        String fvalorlug;
        String fvalortglob;
        String fartgast;
        String fartdeco;
        String fartserv;
        String fartlug;
            
        
        try {
            archivo = new File("src\\archivos\\Cotizaciones Realizadas.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
             
                 String nmu[]= cadena.split(";");
                 nmuI= Integer.parseInt(nmu[1]);
                 String id[]= cadena.split(";");
                 fid= id[2];
                 String nombre[]= cadena.split(";");
                 fnombre=nombre[3];
                 String nI[]= cadena.split(";");
                 fni= nI[4];
                 String fecha[]= cadena.split(";");
                 ffecha=fecha[5];
                 String valorGastro[]= cadena.split(";");
                 fvalorgastro=valorGastro[6];
                 String valortdaceo[]= cadena.split(";");
                 fvalordeco=valortdaceo[7];
                 String valortserv[]= cadena.split(";");
                 fvalorserv= valortserv[8];
                 String valortlug[]= cadena.split(";");
                 fvalorlug= valortlug[9];
                 String valorTglob[]= cadena.split(";");
                 valorTglobIn= Integer.parseInt(valorTglob[10]);
                 fvalortglob=valorTglob[10];
                 String artGast[]= cadena.split(";");
                 fartgast= artGast[11];
                 String artDeco[]= cadena.split(";");
                 fartdeco= artDeco[12];
                 String artServ[]= cadena.split(";");
                 fartserv= artServ[13];
                 String artLug[]= cadena.split(";");
                 fartlug= artLug[14];
                 String presu2[]= cadena.split(";");
                 String tip_event3[]= cadena.split(";");
                 String fpresu = presu2[15];
                 String tip_event2 = tip_event3[16];              
                                
                 if (randomico2==nmuI && prec2==valorTglobIn){
                     cajita_grande.append("Numero de cotizaci√≥n: "+ nmuI+"\n");
                     cajita_grande.append("\n"); // Ejemplo para que se vea mas seprado
                     cajita_grande.append("\n");
                     cajita_grande.append("Identificacion del cliente: "+ fid +"\n");
                     cajita_grande.append("Nombre del cliente: "+ fnombre+"\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("Tipo de evento: "+ tip_event2 +"\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("\n");
                     
                     cajita_grande.append("Presupuesto: "+ fpresu +"\n");
                     cajita_grande.append("Numero de invidados: "+ fni+"\n");
                     cajita_grande.append("Fecha del evento: "+ ffecha+"\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("Valor total del evento: "+fvalortglob+"\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("Valor total de gastronomia: "+ fvalorgastro+"\n");
                     cajita_grande.append("Valor total de decoracion: "+ fvalordeco+"\n");
                     cajita_grande.append("Valor total de servicios: "+ fvalorserv+"\n");
                     cajita_grande.append("Valor total de lugares: "+ fvalorlug+"\n");
                     cajita_grande.append("\n");
                     cajita_grande.append("Articulos de Gastronomia: "+ fartgast+"\n");
                     cajita_grande.append("Articulos de Decoracion: "+ fartserv+"\n");
                     cajita_grande.append("Articulos de Servicios "+ fartdeco+"\n");
                     cajita_grande.append("Articulos de lugar "+ fartlug+"\n");
                 }
 
            }  
        
      

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mostrar_cot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mostrar_cot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mostrar_cot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mostrar_cot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mostrar_cot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea cajita_grande;
    private javax.swing.JButton imprimir_contrato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
