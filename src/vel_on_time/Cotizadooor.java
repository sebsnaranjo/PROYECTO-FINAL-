
package vel_on_time;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author jose noel mantilla
 */
public class Cotizadooor extends javax.swing.JFrame {
int x;
int y;
int tot;
int tot2;
boolean gastro;
boolean deco;
boolean serv;
boolean lug;
private int id2;
private int id_en;
private String name2;
private int pres2;
private int dia2;
private int mes2;
private int ano2;
private int numIn;
private String fecha;
int cont =0;
int cont2=0;
int cont4=0;
int cont3=0;
private String gast="";
private String deocr="";
private String servi="";
private String lrgs="";
private String numI2=" ";
int prec_gastro;
int prec_deco;
int prec_serv;
int prec_lug;
String gastro_rev_uni;
String lugar_rev_uni;
String deco_rev_uni;
String serv_rev_uni;
String gastro_rev_uni2;
String lugar_rev_uni2;
String deco_rev_uni2;
String serv_rev_uni2;
    /**
     * Creates new form Cotizador
     */
    public Cotizadooor() {
        initComponents();
        transparenciaBotones();
        this.setLocationRelativeTo(null);
        sele_cot.add(gastronomia);
        sele_cot.add(decoracion);
        sele_cot.add(servicios);
        sele_cot.add(lugar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sele_cot = new javax.swing.ButtonGroup();
        DE_TEXT = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        unit_prov = new javax.swing.JTextArea();
        ar_car_1 = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        mutiplicado = new javax.swing.JTextField();
        tit_multi = new javax.swing.JLabel();
        proveedor_cot = new javax.swing.JLabel();
        enviar_cotizar = new javax.swing.JButton();
        lugar = new javax.swing.JRadioButton();
        servicios = new javax.swing.JRadioButton();
        decoracion = new javax.swing.JRadioButton();
        gastronomia = new javax.swing.JRadioButton();
        selc_evento2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        env_final = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        combo_gastro = new javax.swing.JComboBox<String>();
        combo_deco = new javax.swing.JComboBox<String>();
        combo_serv = new javax.swing.JComboBox<String>();
        combo_lugar = new javax.swing.JComboBox<String>();
        combo_art_gastro = new javax.swing.JComboBox<String>();
        combo_art_deco = new javax.swing.JComboBox<String>();
        combo_art_serv = new javax.swing.JComboBox<String>();
        combo_art_lugar = new javax.swing.JComboBox<String>();
        ar_car_2 = new javax.swing.JButton();
        ar_car_3 = new javax.swing.JButton();
        ar_car_4 = new javax.swing.JButton();
        elec_gastro = new javax.swing.JButton();
        elec_deco = new javax.swing.JButton();
        elec_serv = new javax.swing.JButton();
        elec_lugar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        art_unit = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DE_TEXT.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        DE_TEXT.setText("Proveedor de:");
        getContentPane().add(DE_TEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 430, 36));

        unit_prov.setColumns(20);
        unit_prov.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        unit_prov.setRows(5);
        jScrollPane2.setViewportView(unit_prov);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 430, 219));

        ar_car_1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        ar_car_1.setText("Agregar al carrito");
        ar_car_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ar_car_1MouseClicked(evt);
            }
        });
        getContentPane().add(ar_car_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 470, 200, -1));

        volver.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        volver.setText("Volver");
        volver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverMouseClicked(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, 120, 30));

        mutiplicado.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        mutiplicado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutiplicadoActionPerformed(evt);
            }
        });
        getContentPane().add(mutiplicado, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 630, 170, 30));

        tit_multi.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        tit_multi.setText("Número de invitados:");
        getContentPane().add(tit_multi, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 630, 190, 30));

        proveedor_cot.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(proveedor_cot, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 273, 50));

        enviar_cotizar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        enviar_cotizar.setText("Cotizar");
        enviar_cotizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviar_cotizarMouseClicked(evt);
            }
        });
        enviar_cotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar_cotizarActionPerformed(evt);
            }
        });
        getContentPane().add(enviar_cotizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 90, 120, 30));

        lugar.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        lugar.setText("Lugar");
        lugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/location_map_directions_geography_gps_icon-icons.com_55988.png"))); // NOI18N
        getContentPane().add(lugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 120, -1));

        servicios.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        servicios.setText("Servicios");
        servicios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        getContentPane().add(servicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 130, 60));

        decoracion.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        decoracion.setText("Decoración");
        decoracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/4_balloon_decoration_christmas_xmas_celebration_party_icon-icons.com_77039.png"))); // NOI18N
        decoracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decoracionActionPerformed(evt);
            }
        });
        getContentPane().add(decoracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 170, -1));

        gastronomia.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        gastronomia.setText("Gastronomia");
        gastronomia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32395greensalad_98843.png"))); // NOI18N
        getContentPane().add(gastronomia, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 190, 60));

        selc_evento2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        selc_evento2.setText("Cotizar:");
        getContentPane().add(selc_evento2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 870, -1));

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 880, 20));

        env_final.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        env_final.setText("Finalizar cotización");
        env_final.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                env_finalMouseClicked(evt);
            }
        });
        getContentPane().add(env_final, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 670, -1, 30));

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel5.setText("Gastronomia:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 100, 20));

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel6.setText("Decoración:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, 100, 20));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel7.setText("Servicios:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 90, 20));

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel8.setText("Lugar:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 90, 20));

        combo_gastro.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_gastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 220, -1));

        combo_deco.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_deco, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 590, 220, -1));

        combo_serv.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_serv, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, 220, -1));

        combo_lugar.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_lugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 220, -1));

        combo_art_gastro.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_art_gastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 220, -1));

        combo_art_deco.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_art_deco, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 590, 220, -1));

        combo_art_serv.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_art_serv, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 550, 220, -1));

        combo_art_lugar.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        getContentPane().add(combo_art_lugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 220, -1));

        ar_car_2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        ar_car_2.setText("Agregar al carrito");
        ar_car_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ar_car_2MouseClicked(evt);
            }
        });
        getContentPane().add(ar_car_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 590, 200, -1));

        ar_car_3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        ar_car_3.setText("Agregar al carrito");
        ar_car_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ar_car_3MouseClicked(evt);
            }
        });
        getContentPane().add(ar_car_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 550, 200, -1));

        ar_car_4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        ar_car_4.setText("Agregar al carrito");
        ar_car_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ar_car_4MouseClicked(evt);
            }
        });
        getContentPane().add(ar_car_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 510, 200, -1));

        elec_gastro.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        elec_gastro.setText("Elegir");
        elec_gastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elec_gastroMouseClicked(evt);
            }
        });
        getContentPane().add(elec_gastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, 90, -1));

        elec_deco.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        elec_deco.setText("Elegir");
        elec_deco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elec_decoMouseClicked(evt);
            }
        });
        elec_deco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elec_decoActionPerformed(evt);
            }
        });
        getContentPane().add(elec_deco, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 590, 90, -1));

        elec_serv.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        elec_serv.setText("Elegir");
        elec_serv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elec_servMouseClicked(evt);
            }
        });
        elec_serv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elec_servActionPerformed(evt);
            }
        });
        getContentPane().add(elec_serv, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 550, 90, -1));

        elec_lugar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        elec_lugar.setText("Elegir");
        elec_lugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elec_lugarMouseClicked(evt);
            }
        });
        getContentPane().add(elec_lugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 90, -1));

        art_unit.setColumns(20);
        art_unit.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        art_unit.setRows(5);
        jScrollPane1.setViewportView(art_unit);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 430, 220));

        jLabel1.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        jLabel1.setText("Articulos:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, 430, 36));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/marble.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void transparenciaBotones(){
    
        gastronomia.setOpaque(false);
        gastronomia.setContentAreaFilled(false);
        gastronomia.setBorderPainted(true);
        
        servicios.setOpaque(false);
        servicios.setContentAreaFilled(false);
        servicios.setBorderPainted(true);
        
        lugar.setOpaque(false);
        lugar.setContentAreaFilled(false);
        lugar.setBorderPainted(true);
        
        decoracion.setOpaque(false);
        decoracion.setContentAreaFilled(false);
        decoracion.setBorderPainted(true);
        
        
    }
    
    
    private void ar_car_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ar_car_1MouseClicked
         gastro_rev_uni2 = (String) combo_art_gastro.getSelectedItem();
        String id[] = gastro_rev_uni2.split(",");
        String p[] = gastro_rev_uni2.split(",");
        gast=gast+id[0]+","+p[1]+",";
        System.out.println("hola");
        int almax= Integer.parseInt(id[1]);
        cont=cont+almax;
        this.gast=gast;
       
        
        
    }//GEN-LAST:event_ar_car_1MouseClicked

    private void volverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseClicked
       
       this.setVisible(false);
       
    }//GEN-LAST:event_volverMouseClicked
public void llegada(int id,String name,int pres,int numI,int dia,int mes,int ano){
         numIn= numI;
         System.out.println(id+"g");
         id2=id;
         name2=name;
         pres2=pres;
         dia2=dia;
         mes2=mes;
         ano2=ano;
         fecha = dia+"/"+mes+"/"+ano;
         System.out.println(id2+"l");
         
         this.id2=id2;
         this.name2=name2;
         this.pres2=pres2;
         this.numIn=numIn;
         this.fecha=fecha;
      
         
         
    }
    private void enviar_cotizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_cotizarMouseClicked
       
       
      if( gastronomia.isSelected()){
          gastronomia2();
            numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( decoracion.isSelected()){
          decoracion2();
          numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( servicios.isSelected()){
          servicios2();
          numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( lugar.isSelected()){
          lugar2();
          numI2 = Integer.toString(numIn);
          mutiplicado.setText(numI2);
          
      }
      
    }//GEN-LAST:event_enviar_cotizarMouseClicked

    private void env_finalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_env_finalMouseClicked
       
        cotizacion_finalll ob28 = new cotizacion_finalll();
        ob28.setVisible(true);
        cont=cont*numIn;
        cont2=cont2*numIn;
        cont3=cont3*numIn;
        cont4=cont4*numIn;
        
        System.out.println(id_en+"f");
        ob28.llegada_oculta(id2,name2,pres2,numIn,fecha);
        ob28.llegada_fantasma(gast,servi,deocr,lrgs);
        ob28.llegada_final(prec_gastro,prec_deco,prec_serv,prec_lug,cont, cont2, cont3, cont4);
        this.setVisible(false);
       
    }//GEN-LAST:event_env_finalMouseClicked
    
    private void mutiplicadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutiplicadoActionPerformed

    }//GEN-LAST:event_mutiplicadoActionPerformed

    private void elec_servActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elec_servActionPerformed
     
    }//GEN-LAST:event_elec_servActionPerformed

    private void elec_gastroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elec_gastroMouseClicked
        archivoos ob27 = new archivoos();
        id_en=id2;
        this.id_en=id_en;
        gastro_rev_uni = (String) combo_gastro.getSelectedItem();
        String id[] = gastro_rev_uni.split(",");
        String nme[] = gastro_rev_uni.split(",");
        String prec[] = gastro_rev_uni.split(",");
        String id5 = id[0];
        prec_gastro= Integer.parseInt(prec[2]);
       this.prec_gastro=prec_gastro;
        ob27.archprovar(1,nme[1], id5);
        gastronomia(id5);
        
      
        
    }//GEN-LAST:event_elec_gastroMouseClicked

    private void decoracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decoracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_decoracionActionPerformed

    private void enviar_cotizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar_cotizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enviar_cotizarActionPerformed

    private void elec_decoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elec_decoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elec_decoActionPerformed

    private void elec_decoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elec_decoMouseClicked
        archivoos ob27 = new archivoos();
        id_en=id2;
        this.id_en=id_en;
        deco_rev_uni = (String) combo_deco.getSelectedItem();
        String id[] = deco_rev_uni.split(",");
        String nme[] = deco_rev_uni.split(",");
        String id5 = id[0];
        String prec[] = deco_rev_uni.split(",");
        prec_deco= Integer.parseInt(prec[2]);
       this.prec_deco=prec_deco;
        ob27.archprovar(2,nme[1], id5);
        decoracion(id5);
        
    }//GEN-LAST:event_elec_decoMouseClicked

    private void elec_servMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elec_servMouseClicked
        archivoos ob27 = new archivoos();
        id_en=id2;
        this.id_en=id_en;
        serv_rev_uni = (String) combo_serv.getSelectedItem();
        String id[] = serv_rev_uni.split(",");
        String nme[] = serv_rev_uni.split(",");
        String id5 = id[0];
        String prec[] = serv_rev_uni.split(",");
        prec_serv= Integer.parseInt(prec[2]);
        this.prec_serv=prec_serv;
        ob27.archprovar(3,nme[1], id5);
        servicio(id5);
    }//GEN-LAST:event_elec_servMouseClicked

    private void elec_lugarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elec_lugarMouseClicked
        archivoos ob27 = new archivoos();
        id_en=id2;
        this.id_en=id_en;
        lugar_rev_uni = (String) combo_lugar.getSelectedItem();
        String id[] = lugar_rev_uni.split(",");
        String nme[] = lugar_rev_uni.split(",");
        String id5 = id[0];
        String prec[] = lugar_rev_uni.split(",");
        prec_lug= Integer.parseInt(prec[2]);
        this.prec_lug=prec_lug;
        ob27.archprovar(4,nme[1], id5);
        lugar(id5);
    }//GEN-LAST:event_elec_lugarMouseClicked

    private void ar_car_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ar_car_2MouseClicked
     lugar_rev_uni2 = (String) combo_art_deco.getSelectedItem();
    
        String id[] = lugar_rev_uni2.split(",");
        int almax= Integer.parseInt(id[1]);
        String p[] = lugar_rev_uni2.split(",");
        deocr=deocr+id[0]+","+p[1]+",";
        cont2=cont2+almax;
        System.out.println(cont2);
        System.out.println("deocr"+deocr);
        this.deocr=deocr;
            
    }//GEN-LAST:event_ar_car_2MouseClicked

    private void ar_car_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ar_car_3MouseClicked
    serv_rev_uni2 = (String) combo_art_serv.getSelectedItem();
   
        String id[] = serv_rev_uni2.split(",");
        int almax= Integer.parseInt(id[1]);
        String p[] = serv_rev_uni2.split(",");
        servi=servi+id[0]+","+p[1]+",";
        cont3=cont3+almax;
        System.out.println(cont3);
        System.out.println("serv"+servi);
        this.servi=servi;
    }//GEN-LAST:event_ar_car_3MouseClicked

    private void ar_car_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ar_car_4MouseClicked
         deco_rev_uni2 = (String) combo_art_lugar.getSelectedItem();
       
        String id[] = deco_rev_uni2.split(",");
        int almax= Integer.parseInt(id[1]);
        String p[] = deco_rev_uni2.split(",");
        lrgs=lrgs+id[0]+","+p[1]+",";
        cont4=cont4+almax;
        System.out.println(cont4);
        System.out.println("lrgs"+lrgs);
        this.lrgs=lrgs;
    }//GEN-LAST:event_ar_car_4MouseClicked

    /**
     * @param args the command line arguments
     */

        
      void gastronomia(String id5){
          
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Comida.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(id5.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art_gastro.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
      }
    
    
    
    
     void gastronomia2(){
        gastro=true;
        String a;
       unit_prov.setText(" ");
         art_unit.setText(" ");
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Comida.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              
              String id[] = cadena.split(";");
                int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                      a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores Comida.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
               
                boolean op;
                String id[] = cadena2.split(";");
               int id3=Integer.parseInt(id[1]);
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                        int prec2_gastro;
                        prec2_gastro=/*(float)*/prec+((prec*30)/100);
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec2_gastro +"\n";
                      unit_prov.append(b);
                      c=id3+","+name+","+prec2_gastro;
                      combo_gastro.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }

        
    }
     void decoracion(String id5){
          
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Decoración y ambientación.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(id5.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art_deco.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
      }
   
    void decoracion2(){
        unit_prov.setText(" ");
         art_unit.setText(" ");
        deco=true;
  
          String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Decoración y ambientación.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
                 
               String id[] = cadena.split(";");
             int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
                if (op==true){
                       a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores Decoración y ambientación.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String c;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                 String id[] = cadena2.split(";");
               int id3=Integer.parseInt(id[1]);
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                        int prec2_deco;
                        prec2_deco=/*(float)*/prec+((prec*52)/100);
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec2_deco +"\n";
                      unit_prov.append(b);
                      c=id3+","+name+","+prec2_deco;
                      combo_deco.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       
    }
    void servicio(String id5){
                
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos servicios.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(id5.equals(id[1])){
                         a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art_serv.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
    
      }
    
   
    void servicios2(){
        serv=true;
        unit_prov.setText(" ");
         art_unit.setText(" ");
        String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos servicios.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String id[] = cadena.split(";");
             int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
                if (op==true){
                      a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores servicios.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                 String id[] = cadena2.split(";");
               int id3=Integer.parseInt(id[1]);
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                        int prec2_serv;
                        prec2_serv=/*(float)*/prec+((prec*60)/100);
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec2_serv +"\n";
                      unit_prov.append(b);
                       c=id3+","+name+","+prec2_serv;
                      combo_serv.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    
    void lugar(String id5){
         String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\lugar.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(id5.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art_lugar.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    
    void lugar2(){
        unit_prov.setText(" ");
         art_unit.setText(" ");
        lug=true;
        String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\lugar.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
               String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
                if (op==true){
                      a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores lugar.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                String c;
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                 String id[] = cadena2.split(";");
               int id3=Integer.parseInt(id[1]);
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                        int prec2_lug;
                        prec2_lug=/*(float)*/prec+((prec*20)/100);
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec2_lug +"\n";
                      unit_prov.append(b);
                      c=id3+","+name+","+prec2_lug;
                      combo_lugar.addItem(c);
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cotizadooor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cotizadooor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cotizadooor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cotizadooor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cotizadooor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DE_TEXT;
    private javax.swing.JButton ar_car_1;
    private javax.swing.JButton ar_car_2;
    private javax.swing.JButton ar_car_3;
    private javax.swing.JButton ar_car_4;
    private javax.swing.JTextArea art_unit;
    private javax.swing.JComboBox<String> combo_art_deco;
    private javax.swing.JComboBox<String> combo_art_gastro;
    private javax.swing.JComboBox<String> combo_art_lugar;
    private javax.swing.JComboBox<String> combo_art_serv;
    private javax.swing.JComboBox<String> combo_deco;
    private javax.swing.JComboBox<String> combo_gastro;
    private javax.swing.JComboBox<String> combo_lugar;
    private javax.swing.JComboBox<String> combo_serv;
    private javax.swing.JRadioButton decoracion;
    private javax.swing.JButton elec_deco;
    private javax.swing.JButton elec_gastro;
    private javax.swing.JButton elec_lugar;
    private javax.swing.JButton elec_serv;
    private javax.swing.JButton env_final;
    private javax.swing.JButton enviar_cotizar;
    private javax.swing.JRadioButton gastronomia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton lugar;
    private javax.swing.JTextField mutiplicado;
    private javax.swing.JLabel proveedor_cot;
    private javax.swing.JLabel selc_evento2;
    private javax.swing.ButtonGroup sele_cot;
    private javax.swing.JRadioButton servicios;
    private javax.swing.JLabel tit_multi;
    private javax.swing.JTextArea unit_prov;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
