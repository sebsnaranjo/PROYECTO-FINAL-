/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vel_on_time;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 *
 * @author jose noel mantilla
 */
public class Mod_art extends javax.swing.JFrame {

boolean gastronom=false;
boolean decor=false;
boolean servi=false;
boolean lugar=false;
String select_id=" ";
String id="";
private String nombre_gastro;
private String nombre_deco;
private String nombre_serv;
private String nombre_lug;

    /**
     * Creates new form Mod_art
     */
    public Mod_art() {
        initComponents();
        transparenciaBotones();
        this.setLocationRelativeTo(null);
        mod_prov.add(gastro);
        mod_prov.add(deco);
        mod_prov.add(serv);
        mod_prov.add(lug);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void transparenciaBotones(){
    
        gastro.setOpaque(false);
        gastro.setContentAreaFilled(false);
        gastro.setBorderPainted(true);
        
        deco.setOpaque(false);
        deco.setContentAreaFilled(false);
        deco.setBorderPainted(true);
        
        serv.setOpaque(false);
        serv.setContentAreaFilled(false);
        serv.setBorderPainted(true);
        
        lug.setOpaque(false);
        lug.setContentAreaFilled(false);
        lug.setBorderPainted(true);
        
        
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mod_prov = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        gastro = new javax.swing.JRadioButton();
        deco = new javax.swing.JRadioButton();
        serv = new javax.swing.JRadioButton();
        lug = new javax.swing.JRadioButton();
        combo_art = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rev_nom = new javax.swing.JTextField();
        rev_prec = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        enviar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        elegir = new javax.swing.JButton();
        id_prov = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione el ID del proveedor:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 270, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 567, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 570, 10));

        jLabel2.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("¿Que tipo de proveedor desea modificar?");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 50));

        gastro.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        gastro.setText("Gastronomia");
        gastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32395greensalad_98843.png"))); // NOI18N
        gastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gastroActionPerformed(evt);
            }
        });
        getContentPane().add(gastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 180, 60));

        deco.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        deco.setText("Decoración");
        deco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/4_balloon_decoration_christmas_xmas_celebration_party_icon-icons.com_77039.png"))); // NOI18N
        getContentPane().add(deco, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 160, 60));

        serv.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        serv.setText("Servicios");
        serv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        getContentPane().add(serv, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 180, 60));

        lug.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        lug.setText("Lugar");
        lug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/location_map_directions_geography_gps_icon-icons.com_55988.png"))); // NOI18N
        lug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lugActionPerformed(evt);
            }
        });
        getContentPane().add(lug, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 160, 60));
        getContentPane().add(combo_art, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, 180, 30));

        jLabel3.setFont(new java.awt.Font("SFNS Display", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Articulos:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 260, 30));

        rev_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rev_nomActionPerformed(evt);
            }
        });
        rev_nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rev_nomKeyTyped(evt);
            }
        });
        getContentPane().add(rev_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 199, -1));

        rev_prec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rev_precKeyTyped(evt);
            }
        });
        getContentPane().add(rev_prec, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 370, 193, -1));

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel4.setText("Nombre:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, 20));

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel5.setText("Precio:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, -1, 20));

        enviar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        enviar.setText("Enviar");
        enviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviarMouseClicked(evt);
            }
        });
        getContentPane().add(enviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 110, 30));

        buscar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        buscar.setText("Buscar");
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buscarMouseEntered(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, -1, 30));

        modificar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        modificar.setText("Modificar");
        modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarMouseClicked(evt);
            }
        });
        getContentPane().add(modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 100, 30));

        elegir.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        elegir.setText("Elegir");
        elegir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elegirMouseClicked(evt);
            }
        });
        getContentPane().add(elegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, -1, 30));
        getContentPane().add(id_prov, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 170, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/marble-2398946_960_720.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rev_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rev_nomActionPerformed
        
    }//GEN-LAST:event_rev_nomActionPerformed

    private void enviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviarMouseClicked
      
        if(gastro.isSelected()){
           gastro();
           gastronomia2();
        }
         if(deco.isSelected()){
           deco();
           decoracion2();
           
        }
        if(serv.isSelected()){
           serv();
           servicio2();
        }
        if(lug.isSelected()){
           lug();
           lugar2();
        }
    }//GEN-LAST:event_enviarMouseClicked

    private void buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseClicked
      
       
        
        if(gastronom==true){
           obtener();
            gastronomia();
            
       }
        if(decor==true){
          obtener();
            decoracion();
            
       }
         if(servi==true){
          obtener();
            servicio();
            
       }
          if(lugar==true){
           obtener();
            lugar();
            
       }
        
       
    }//GEN-LAST:event_buscarMouseClicked

    private void modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarMouseClicked
          if(gastronom==true){
           
            cambiogastro2();
            
       }
        if(decor==true){
          
            cambiodeco2();
            
       }
         if(servi==true){
          
            cambioserv2();
            
       }
          if(lugar==true){
           
           cambiolug2();
            
       }
    }//GEN-LAST:event_modificarMouseClicked

    private void rev_nomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rev_nomKeyTyped
        char c=evt.getKeyChar();
        if(c<'a'|| c>'z')evt.consume();
    }//GEN-LAST:event_rev_nomKeyTyped

    private void rev_precKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rev_precKeyTyped
       char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();
    }//GEN-LAST:event_rev_precKeyTyped

    private void elegirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elegirMouseClicked
         if(gastronom==true){
           
            cambio_gastro();
            
       }
        if(decor==true){
          
            cambio_deco();
            
       }
         if(servi==true){
          
            cambio_serv();
            
       }
          if(lugar==true){
           
           cambio_lug();
            
       }
    }//GEN-LAST:event_elegirMouseClicked

    private void buscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarMouseEntered

    private void gastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gastroActionPerformed

    private void lugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lugActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lugActionPerformed
    void obtener(){
         select_id = (String) id_prov.getSelectedItem();
        id=select_id;
        this.id=id;
    }
   void gastro(){
       
        gastronom=true;
    }
    void deco(){
        decor=true;
    }
    void serv(){
        servi=true;
    }
    void lug(){
        lugar=true;
    }
    
     void cambio_gastro(){
         
         String art = (String) combo_art.getSelectedItem();
         String nombre[]= art.split(",");
         String value[]= art.split(",");
         rev_nom.setText(nombre[0]);
         nombre_gastro=nombre[0];
         this.nombre_gastro=nombre_gastro;
         rev_prec.setText(value[1]);
        
        
         
     }
     void cambiogastro2(){
         
         archivoos ob45= new archivoos();
          File fNuevo = new File("src\\archivos\\Articulos Comida.txt");
         String result2= rev_nom.getText()+";"+rev_prec.getText()+";";
         ob45.modificarart2(fNuevo,nombre_gastro,result2);
     }
     
     
     
     void cambio_deco(){
            String art = (String) combo_art.getSelectedItem();
         String nombre[]= art.split(",");
         String value[]= art.split(",");
         rev_nom.setText(nombre[0]);
         nombre_deco=nombre[0];
         this.nombre_deco=nombre_deco;
         rev_prec.setText(value[1]);
     }
      void cambiodeco2(){
         
         archivoos ob45= new archivoos();
          File fNuevo = new File("src\\archivos\\Articulos Decoración y ambientación.txt");
         String result2= rev_nom.getText()+";"+rev_prec.getText()+";";
         ob45.modificarart2(fNuevo,nombre_deco,result2);
     }
     void cambio_serv(){
            String art = (String) combo_art.getSelectedItem();
         String nombre[]= art.split(",");
         String value[]= art.split(",");
         rev_nom.setText(nombre[0]);
         nombre_serv=nombre[0];
         this.nombre_serv=nombre_serv;
         rev_prec.setText(value[1]);
     }
       void cambioserv2(){
         
         archivoos ob45= new archivoos();
          File fNuevo = new File("src\\archivos\\Articulos servicios.txt");
         String result2= rev_nom.getText()+";"+rev_prec.getText()+";";
         ob45.modificarart2(fNuevo,nombre_serv,result2);
     }
     void cambio_lug(){
            String art = (String) combo_art.getSelectedItem();
         String nombre[]= art.split(",");
         String value[]= art.split(",");
         rev_nom.setText(nombre[0]);
         nombre_lug=nombre[0];
         this.nombre_lug=nombre_lug;
         rev_prec.setText(value[1]);
     }
       void cambiolug2(){
         
         archivoos ob45= new archivoos();
          File fNuevo = new File("src\\archivos\\lugar.txt");
         String result2= rev_nom.getText()+";"+rev_prec.getText()+";";
         ob45.modificarart2(fNuevo,nombre_lug,result2);
     }
     
     
     
     
      void gastronomia(){
          
        String a;
        
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Comida.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    System.out.println(select_id);
                    System.out.println(id[1]);
                    if(select_id.equals(id[1])){
                       
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
      
        
        
    
      }
      
   void gastronomia2(){  
       String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores Comida.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }

   }
      
     void decoracion2(){  
       String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores Decoración y ambientación.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
   } 
    void decoracion(){
          
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Decoración y ambientación.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
      }
      void servicio2(){
          
        
        String b;
       String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores servicios.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
      }
    void servicio(){
                
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos servicios.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                         a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
    
      }
    
      void lugar2(){
          
        
        String b;
          String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores lugar.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
      }
    
    
    
     void lugar(){
         String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\lugar.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mod_art().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JComboBox<String> combo_art;
    private javax.swing.JRadioButton deco;
    private javax.swing.JButton elegir;
    private javax.swing.JButton enviar;
    private javax.swing.JRadioButton gastro;
    private javax.swing.JComboBox<String> id_prov;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton lug;
    private javax.swing.ButtonGroup mod_prov;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField rev_nom;
    private javax.swing.JTextField rev_prec;
    private javax.swing.JRadioButton serv;
    // End of variables declaration//GEN-END:variables
}
