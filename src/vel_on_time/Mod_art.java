/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vel_on_time;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 *
 * @author jose noel mantilla
 */
public class Mod_art extends javax.swing.JFrame {

boolean gastronom=false;
boolean decor=false;
boolean servi=false;
boolean lugar=false;
String select_id=" ";
String id="";
    /**
     * Creates new form Mod_art
     */
    public Mod_art() {
        initComponents();
        mod_prov.add(gastro);
        mod_prov.add(deco);
        mod_prov.add(serv);
        mod_prov.add(lug);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mod_prov = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        gastro = new javax.swing.JRadioButton();
        deco = new javax.swing.JRadioButton();
        serv = new javax.swing.JRadioButton();
        lug = new javax.swing.JRadioButton();
        combo_art = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rev_nom = new javax.swing.JTextField();
        rev_prec = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        enviar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        elegir = new javax.swing.JButton();
        id_prov = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("SELECCIONE EL ID DEL PROVEEDOR:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 220, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 159, 567, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 555, 10));

        jLabel2.setText("QUE TIPO DE PROVEEDOR DESEA MODIFICAR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 13, -1, -1));

        gastro.setText("GASTRONOMIA");
        getContentPane().add(gastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 74, -1, -1));

        deco.setText("DECORACIÃ“N");
        getContentPane().add(deco, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 74, -1, -1));

        serv.setText("SERVICIOS");
        getContentPane().add(serv, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 112, -1, -1));

        lug.setText("LUGAR");
        getContentPane().add(lug, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 112, -1, -1));
        getContentPane().add(combo_art, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 185, -1));

        jLabel3.setText("ARTICULOS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 77, -1));

        rev_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rev_nomActionPerformed(evt);
            }
        });
        getContentPane().add(rev_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 333, 199, -1));
        getContentPane().add(rev_prec, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 333, 193, -1));

        jLabel4.setText("NOMBRE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 336, -1, -1));

        jLabel5.setText("PRECIO");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 336, -1, -1));

        enviar.setText("ENVIAR");
        enviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviarMouseClicked(evt);
            }
        });
        getContentPane().add(enviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 86, 144, -1));

        buscar.setText("BUSCAR");
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMouseClicked(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        modificar.setText("MODIFICAR");
        modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarMouseClicked(evt);
            }
        });
        getContentPane().add(modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 406, -1, -1));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 278, 10, -1));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 178, 10, -1));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 188, 10, -1));

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 198, 10, -1));

        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 208, 10, -1));

        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 218, 10, -1));

        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 228, 10, -1));

        jSeparator10.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 238, 10, -1));

        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 248, 10, -1));

        jSeparator12.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 258, 10, -1));

        jSeparator13.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 268, 10, -1));

        elegir.setText("ELEGIR");
        getContentPane().add(elegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, -1, -1));
        getContentPane().add(id_prov, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 130, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rev_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rev_nomActionPerformed
        
    }//GEN-LAST:event_rev_nomActionPerformed

    private void enviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviarMouseClicked
      
        if(gastro.isSelected()){
           gastro();
           gastronomia2();
        }
         if(deco.isSelected()){
           deco();
           decoracion2();
           
        }
        if(serv.isSelected()){
           serv();
           servicio2();
        }
        if(lug.isSelected()){
           lug();
           lugar2();
        }
    }//GEN-LAST:event_enviarMouseClicked

    private void buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseClicked
      
       
        
        if(gastronom==true){
           
            gastronomia();
            
       }
        if(decor==true){
          
            decoracion();
            
       }
         if(servi==true){
          
            servicio();
            
       }
          if(lugar==true){
           
            lugar();
            
       }
        
       
    }//GEN-LAST:event_buscarMouseClicked

    private void modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarMouseClicked
        
    }//GEN-LAST:event_modificarMouseClicked
    void obtener(){
         select_id = (String) id_prov.getSelectedItem();
        id=select_id;
        this.id=id;
    }
   void gastro(){
       
        gastronom=true;
    }
    void deco(){
        decor=true;
    }
    void serv(){
        servi=true;
    }
    void lug(){
        lugar=true;
    }
    
         
      void gastronomia(){
          
        String a;
        
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos Comida.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    
                    if(select_id.equals(id[1])){
                       
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
      }
      
   void gastronomia2(){  
       String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores Comida.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
   }
      
     void decoracion2(){  
       String b;
        String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores DecoraciÃ³n y ambientaciÃ³n.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
   } 
    void decoracion(){
          
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos DecoraciÃ³n y ambientaciÃ³n.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
      }
      void servicio2(){
          
        
        String b;
       String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores servicios.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
      }
    void servicio(){
                
        
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\Articulos servicios.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                         a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    
    
      }
    
      void lugar2(){
          
        
        String b;
          String c;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("src\\archivos\\Provedores lugar.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                String id3;
               
                boolean op;
                String id[] = cadena2.split(";");
               id3=id[1];
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ")){
                       
                    }else {
                     
                      c=id3;
                      id_prov.addItem(c);
                      
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
obtener();
      }
    
    
    
     void lugar(){
         String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("src\\archivos\\lugar.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              String c;
              String id[] = cadena.split(";");
              int id3=Integer.parseInt(id[1]);
                
                String nombre[] = cadena.split(";");
                info = nombre[2];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[3]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[4]);
               
                if (op==true){
                    if(select_id.equals(id[1])){
                        a="id:"+id3+ "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      c=info+","+prec;
                      combo_art.addItem(c); 
                    }
                     
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mod_art.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mod_art().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JComboBox<String> combo_art;
    private javax.swing.JRadioButton deco;
    private javax.swing.JButton elegir;
    private javax.swing.JButton enviar;
    private javax.swing.JRadioButton gastro;
    private javax.swing.JComboBox<String> id_prov;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JRadioButton lug;
    private javax.swing.ButtonGroup mod_prov;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField rev_nom;
    private javax.swing.JTextField rev_prec;
    private javax.swing.JRadioButton serv;
    // End of variables declaration//GEN-END:variables
}
