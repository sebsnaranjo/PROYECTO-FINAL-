
package vel_on_time;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author jose noel mantilla
 */
public class Cotizador extends javax.swing.JFrame {
int x;
int y;
int tot;
int tot2;
boolean gastro;
boolean deco;
boolean serv;
boolean lug;
private int id2;
private String name2;
private int pres2;
private int dia2;
private int mes2;
private int ano2;
private int numIn;

String numI2=" ";
    /**
     * Creates new form Cotizador
     */
    public Cotizador() {
        initComponents();
        
        sele_cot.add(gastronomia);
        sele_cot.add(decoracion);
        sele_cot.add(servicios);
        sele_cot.add(lugar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sele_cot = new javax.swing.ButtonGroup();
        DE_TEXT = new javax.swing.JLabel();
        art_prov = new javax.swing.JScrollPane();
        art_unit = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        unit_prov = new javax.swing.JTextArea();
        prec_ob = new javax.swing.JTextField();
        prec_art_ob = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        selc_cont = new javax.swing.JButton();
        resultado = new javax.swing.JTextField();
        volver = new javax.swing.JButton();
        final_tit = new javax.swing.JLabel();
        mutiplicado = new javax.swing.JTextField();
        tit_multi = new javax.swing.JLabel();
        proveedor_cot = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        X1 = new javax.swing.JLabel();
        enviar_cotizar = new javax.swing.JButton();
        lugar = new javax.swing.JRadioButton();
        servicios = new javax.swing.JRadioButton();
        decoracion = new javax.swing.JRadioButton();
        gastronomia = new javax.swing.JRadioButton();
        selc_evento2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        mas = new javax.swing.JLabel();
        cot_final = new javax.swing.JTextField();
        env_final = new javax.swing.JButton();
        tit_fin = new javax.swing.JLabel();
        imprimir = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        nom_prov = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DE_TEXT.setText("PROVEDOR DE:");
        getContentPane().add(DE_TEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 121, 36));

        art_unit.setColumns(20);
        art_unit.setRows(5);
        art_prov.setViewportView(art_unit);

        getContentPane().add(art_prov, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 460, 220));

        unit_prov.setColumns(20);
        unit_prov.setRows(5);
        jScrollPane2.setViewportView(unit_prov);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 540, 219));

        prec_ob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prec_obMouseClicked(evt);
            }
        });
        prec_ob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prec_obActionPerformed(evt);
            }
        });
        getContentPane().add(prec_ob, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 680, 130, 51));

        prec_art_ob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prec_art_obActionPerformed(evt);
            }
        });
        getContentPane().add(prec_art_ob, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 570, 160, 20));

        jLabel1.setText("VALOR BASE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 95, -1));

        selc_cont.setText("Agregar al carrito");
        selc_cont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selc_contMouseClicked(evt);
            }
        });
        getContentPane().add(selc_cont, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 560, -1, -1));
        getContentPane().add(resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 680, 128, 50));

        volver.setText("VOLVER");
        volver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverMouseClicked(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(693, 131, 85, -1));

        final_tit.setText("    FINAL");
        getContentPane().add(final_tit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 650, 79, -1));

        mutiplicado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutiplicadoActionPerformed(evt);
            }
        });
        getContentPane().add(mutiplicado, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 570, 170, -1));

        tit_multi.setText("NUMERO DE INVITADOS");
        getContentPane().add(tit_multi, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, 143, -1));

        proveedor_cot.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(proveedor_cot, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 273, 50));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ARTICULOS DEL PROVEEDOR ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, 265, 50));

        jLabel9.setText("VALOR BASE");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 650, 95, -1));

        jLabel10.setText("VALOR POR ARTICULO");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, -1, -1));

        X1.setText("X");
        getContentPane().add(X1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 570, 27, -1));

        enviar_cotizar.setText("COTIZAR");
        enviar_cotizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviar_cotizarMouseClicked(evt);
            }
        });
        getContentPane().add(enviar_cotizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(693, 99, -1, -1));

        lugar.setText("LUGAR");
        getContentPane().add(lugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 131, -1, -1));

        servicios.setText("SERVICIOS");
        getContentPane().add(servicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 131, -1, -1));

        decoracion.setText("DECORACION Y AMBIENTACION");
        getContentPane().add(decoracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 91, -1, -1));

        gastronomia.setText("GASTRONOMIA");
        getContentPane().add(gastronomia, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 91, -1, -1));

        selc_evento2.setText("COTIZAR:");
        getContentPane().add(selc_evento2, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 39, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 194, 1226, 10));

        mas.setText("  +");
        getContentPane().add(mas, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 680, -1, -1));
        getContentPane().add(cot_final, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 820, 130, 44));

        env_final.setText("Finalizar Cotizacion");
        env_final.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                env_finalMouseClicked(evt);
            }
        });
        getContentPane().add(env_final, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, -1, -1));

        tit_fin.setText("COTIZACION FINAL");
        getContentPane().add(tit_fin, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 790, -1, -1));

        imprimir.setText("IMPRIMIR");
        imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprimirMouseClicked(evt);
            }
        });
        getContentPane().add(imprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 830, -1, -1));

        jSeparator2.setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 502, 1030, 10));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, 1030, -1));

        jLabel2.setText("NOMBRE DEL PROVEEDOR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, -1, -1));
        getContentPane().add(nom_prov, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 150, -1));

        jLabel3.setText("GASTRONOMIA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prec_obActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prec_obActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prec_obActionPerformed

    private void prec_art_obActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prec_art_obActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prec_art_obActionPerformed

    private void selc_contMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selc_contMouseClicked
           x=x+1;
           int multi;
           multi = Integer.parseInt(mutiplicado.getText());
           int[] miArreglo = new int[x];
            for (int i=0; i<x;i++){
             miArreglo[i]= Integer.parseInt(prec_art_ob.getText())*multi;
              tot= tot+miArreglo[i];
             // prec_ob.setText(" ");
             x=x-1;
            }
           
            String tots=" ";
            tots =Integer.toString(tot);
            resultado.setText(tots);     
            
     
           
             
             
          // System.out.println("Valor de x: "+x);*/
           
                
                
    }//GEN-LAST:event_selc_contMouseClicked

    private void volverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseClicked
       Evento ob21 = new Evento();
       
       ob21.setVisible(true);
       this.setVisible(false);
       
    }//GEN-LAST:event_volverMouseClicked

    private void mutiplicadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutiplicadoActionPerformed
        
    }//GEN-LAST:event_mutiplicadoActionPerformed
public void llegada(int id,String name,int pres,int numI,int dia,int mes,int ano){
         numIn= numI;
         id2=id;
         name2=name;
         pres2=pres;
         dia2=dia;
         mes2=mes;
         ano2=ano2;
         
         this.id2=id2;
         this.name2=name2;
         this.pres2=pres2;
         this.numIn=numIn;
         this.dia2=dia2;
         this.mes2=mes2;
         this.ano2=ano2;
         
         
    }
    private void enviar_cotizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_cotizarMouseClicked
       
       
      if( gastronomia.isSelected()){
          gastronomia2();
            numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( decoracion.isSelected()){
          decoracion2();
          numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( servicios.isSelected()){
          servicios2();
          numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
      if( lugar.isSelected()){
          lugar2();
          numI2 = Integer.toString(numIn);
            mutiplicado.setText(numI2);
      }
    }//GEN-LAST:event_enviar_cotizarMouseClicked

    private void prec_obMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prec_obMouseClicked
    
    }//GEN-LAST:event_prec_obMouseClicked

    private void env_finalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_env_finalMouseClicked
        int base;
        int total_art;
        int finalizar;
        String cot=" ";
        base= Integer.parseInt(prec_ob.getText());
        total_art= Integer.parseInt(resultado.getText());
        finalizar=base+total_art;
        cot =Integer.toString(finalizar);
        
        cot_final.setText(cot); 
        
    }//GEN-LAST:event_env_finalMouseClicked
    
    private void imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimirMouseClicked
        archivos ob27 = new archivos();
       String termn= cot_final.getText();
        ob27.archivo_cotizacion(id2,name2,pres2,numIn,dia2,mes2,ano2,termn);
    }//GEN-LAST:event_imprimirMouseClicked

    /**
     * @param args the command line arguments
     */


     void gastronomia2(){
        gastro=true;
        String a;
       
       
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("C:\\Users\\jose noel mantilla\\Desktop\\Articulos Comida.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
              
              
                
                String nombre[] = cadena.split(";");
                info = nombre[1];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[2]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[3]);
                if (op==true){
                      a= "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("C:\\Users\\jose noel mantilla\\Desktop\\Provedores Comida.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec +"\n";
                      unit_prov.append(b);
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }

        
    }
   
    void decoracion2(){
       deco=true;
  
          String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("C:\\Users\\jose noel mantilla\\Desktop\\Articulos Decoración y ambientación.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
                 
                String nombre[] = cadena.split(";");
                info = nombre[1];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[2]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[3]);
                if (op==true){
                      a= "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("C:\\Users\\jose noel mantilla\\Desktop\\Provedores Decoración y ambientación.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec +"\n";
                      unit_prov.append(b);
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       
    }
   
    void servicios2(){
        serv=true;
        String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("C:\\Users\\jose noel mantilla\\Desktop\\Articulos servicios.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
                
                String nombre[] = cadena.split(";");
                info = nombre[1];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[2]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[3]);
                if (op==true){
                      a= "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("C:\\Users\\jose noel mantilla\\Desktop\\Provedores servicios.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec +"\n";
                      unit_prov.append(b);
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    
    
    void lugar2(){
        
        lug=true;
        String a;
        File archivo = null;  //apuntar al archivo almancenado DD
        FileReader contenido = null;  //acceder a todo el contenido del archivo
        BufferedReader linea = null; //accede linea a linea al contenido

        try {
            archivo = new File("C:\\Users\\jose noel mantilla\\Desktop\\lugar.txt");
            contenido = new FileReader(archivo);
            linea = new BufferedReader(contenido);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena = ""; //variable captura los datos del archivo
            while ((cadena = linea.readLine()) != null) { //recorre todo el archivo
                int largo = cadena.length();
                String info;
                int prec;
                boolean op;
                 
                String nombre[] = cadena.split(";");
                info = nombre[1];
                String value[] = cadena.split(";");
                prec = Integer.parseInt(value[2]);
                String band[] = cadena.split(";");
                op=Boolean.parseBoolean(band[3]);
                if (op==true){
                      a= "Nombre del articulo: "+info+" Precio: "+prec +"\n";
                      art_unit.append(a);
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo");
        } finally {
            try {
                if (contenido != null) {
                    contenido.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
       ////////////////////////////////Leyendo 2 Archivo ////////////////////////////////////////////////
        String b;
        File archivo2 = null;  //apuntar al archivo almancenado DD
        FileReader contenido2 = null;  //acceder a todo el contenido del archivo
        BufferedReader linea2 = null; //accede linea a linea al contenido

        try {
           
            archivo2 = new File("C:\\Users\\jose noel mantilla\\Desktop\\Provedores lugar.txt");
            contenido2 = new FileReader(archivo2);
            linea2 = new BufferedReader(contenido2);
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            
            String cadena2 = ""; //variable captura los datos del archivo
            while ((cadena2 = linea2.readLine()) != null) { //recorre todo el archivo
                int largo = cadena2.length();
                String serv;
                String name;
                int prec;
                boolean op;
                
                String nombre[] = cadena2.split(";");
                name = nombre[2];
                
                String precb[] = cadena2.split(";");
                prec=Integer.parseInt(precb[3]);
                String value[] = cadena2.split(";");
                serv= value[4];
                String band[] = cadena2.split(";");
                op=Boolean.parseBoolean(band[5]);
                if (op==true){
                    if(serv.equals(" ") && prec==0){
                        b= "Nombre del proveedor: "+ name+"\n";
                         unit_prov.append(b);
                    }else {
                         b= "Nombre del proveedor: " + name+"  Servicios basicos: "+serv+"  Precio: "+prec +"\n";
                      unit_prov.append(b);
                    }
                     
                }
             
   
            }

        } catch (IOException e) {
            System.out.print("Error consultando archivo" + e);
        } finally {
            try {
                if (contenido2 != null) {
                    contenido2.close();
                }
            } catch (IOException e1) {
                System.out.print("Error cerrando archivo");
            }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cotizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cotizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cotizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cotizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cotizador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DE_TEXT;
    private javax.swing.JLabel X1;
    private javax.swing.JScrollPane art_prov;
    private javax.swing.JTextArea art_unit;
    private javax.swing.JTextField cot_final;
    private javax.swing.JRadioButton decoracion;
    private javax.swing.JButton env_final;
    private javax.swing.JButton enviar_cotizar;
    private javax.swing.JLabel final_tit;
    private javax.swing.JRadioButton gastronomia;
    private javax.swing.JButton imprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton lugar;
    private javax.swing.JLabel mas;
    private javax.swing.JTextField mutiplicado;
    private javax.swing.JTextField nom_prov;
    private javax.swing.JTextField prec_art_ob;
    private javax.swing.JTextField prec_ob;
    private javax.swing.JLabel proveedor_cot;
    private javax.swing.JTextField resultado;
    private javax.swing.JButton selc_cont;
    private javax.swing.JLabel selc_evento2;
    private javax.swing.ButtonGroup sele_cot;
    private javax.swing.JRadioButton servicios;
    private javax.swing.JLabel tit_fin;
    private javax.swing.JLabel tit_multi;
    private javax.swing.JTextArea unit_prov;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
